diff --git a/bin/chef-zero b/bin/chef-zero
index 023111e..8420611 100755
--- a/bin/chef-zero
+++ b/bin/chef-zero
@@ -28,7 +28,7 @@ end
 options = {}
 
 OptionParser.new do |opts|
-  opts.banner = "Usage: chef-zero [ARGS]"
+  opts.banner = "Usage: cinc-zero [ARGS]"
 
   opts.on("-H", "--host HOST", "Host to bind to (default: 127.0.0.1)") do |value|
     options[:host] ||= []
@@ -100,7 +100,7 @@ if options[:daemon]
     server.start(true)
   else
     if ENV["OS"] == "Windows_NT"
-      abort "Daemonization is not supported on Windows. Running 'start chef-zero' will fork the process."
+      abort "Daemonization is not supported on Windows. Running 'start cinc-zero' will fork the process."
     else
       abort "Process.daemon requires Ruby >= 1.9"
     end
diff --git a/lib/chef_zero/endpoints/controls_endpoint.rb b/lib/chef_zero/endpoints/controls_endpoint.rb
index 5790d7f..b3a7836 100644
--- a/lib/chef_zero/endpoints/controls_endpoint.rb
+++ b/lib/chef_zero/endpoints/controls_endpoint.rb
@@ -4,11 +4,11 @@ module ChefZero
     class ControlsEndpoint < RestBase
       # ours is not to wonder why; ours is but to make the pedant specs pass.
       def get(request)
-        error(410, "Server says 410, chef-zero says 410.")
+        error(410, "Server says 410, cinc-zero says 410.")
       end
 
       def post(request)
-        error(410, "Server says 410, chef-zero says 410.")
+        error(410, "Server says 410, cinc-zero says 410.")
       end
     end
   end
diff --git a/lib/chef_zero/endpoints/version_endpoint.rb b/lib/chef_zero/endpoints/version_endpoint.rb
index c51e893..0ef352b 100644
--- a/lib/chef_zero/endpoints/version_endpoint.rb
+++ b/lib/chef_zero/endpoints/version_endpoint.rb
@@ -5,7 +5,7 @@ module ChefZero
     # /version
     class VersionEndpoint < RestBase
       def get(request)
-        text_response(200, "chef-zero #{ChefZero::VERSION}\n")
+        text_response(200, "cinc-zero #{ChefZero::VERSION}\n")
       end
     end
   end
diff --git a/lib/chef_zero/rspec.rb b/lib/chef_zero/rspec.rb
index e1fdfcc..983f9ff 100644
--- a/lib/chef_zero/rspec.rb
+++ b/lib/chef_zero/rspec.rb
@@ -42,7 +42,7 @@ module ChefZero
     extend RSpecClassMethods
 
     def when_the_chef_server(description, *tags, &block)
-      context "When the Chef server #{description}", *tags do
+      context "When the Cinc server #{description}", *tags do
         extend WhenTheChefServerClassMethods
         include WhenTheChefServerInstanceMethods
 
@@ -69,7 +69,7 @@ module ChefZero
           if chef_server_options[:server_scope] != self.class.chef_server_options[:server_scope]
             raise "server_scope: #{chef_server_options[:server_scope]} will not be honored: it can only be set on when_the_chef_server!"
           end
-          Log.info("Starting Chef server with options #{chef_server_options}")
+          Log.info("Starting Cinc server with options #{chef_server_options}")
 
           ChefZero::RSpec.set_server_options(chef_server_options)
 
diff --git a/lib/chef_zero/server.rb b/lib/chef_zero/server.rb
index 9800913..e8cf539 100644
--- a/lib/chef_zero/server.rb
+++ b/lib/chef_zero/server.rb
@@ -231,7 +231,7 @@ module ChefZero
       if publish
         output = publish.respond_to?(:puts) ? publish : STDOUT
         output.puts <<-EOH.gsub(/^ {10}/, "")
-          >> Starting Chef Zero (v#{ChefZero::VERSION})...
+          >> Starting Cinc Zero (v#{ChefZero::VERSION})...
         EOH
       end
 
@@ -248,7 +248,7 @@ module ChefZero
 
       %w{INT TERM}.each do |signal|
         Signal.trap(signal) do
-          puts "\n>> Stopping Chef Zero..."
+          puts "\n>> Stopping Cinc Zero..."
           @server.shutdown
         end
       end
@@ -362,7 +362,7 @@ module ChefZero
       end
     rescue Timeout::Error
       if @thread
-        ChefZero::Log.error("Chef Zero did not stop within #{wait} seconds! Killing...")
+        ChefZero::Log.error("Cinc Zero did not stop within #{wait} seconds! Killing...")
         @thread.kill
         SocketlessServerMap.deregister(port)
       end
diff --git a/lib/chef_zero/socketless_server_map.rb b/lib/chef_zero/socketless_server_map.rb
index 28b7b59..d271b71 100644
--- a/lib/chef_zero/socketless_server_map.rb
+++ b/lib/chef_zero/socketless_server_map.rb
@@ -83,7 +83,7 @@ module ChefZero
 
     def request(port, request_env)
       server = @servers_by_port[port]
-      raise ServerNotFound, "No socketless chef-zero server on given port #{port.inspect}" unless server
+      raise ServerNotFound, "No socketless cinc-zero server on given port #{port.inspect}" unless server
       server.handle_socketless_request(request_env)
     end
 
