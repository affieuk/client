---
.package:
  stage: package
  needs:
    - patch
  script:
    - ./build.sh
    - cd chef/omnibus
    - mkdir ${CI_PROJECT_DIR}/data
    - mv -v pkg/cinc* ${CI_PROJECT_DIR}/data/
    - cp ../VERSION ${CI_PROJECT_DIR}/
  cache:
    paths:
      - cache/*
      - bundle/vendor/*
  artifacts:
    expire_in: 1mo
    paths:
      - data/*
      - VERSION

.package:amazonlinux:
  extends: .package
  after_script:
    - mkdir -p ${CI_PROJECT_DIR}/data/amazon/${PLATFORM_VER}
    - mv -v ${CI_PROJECT_DIR}/data/*.{rpm,json} ${CI_PROJECT_DIR}/data/amazon/${PLATFORM_VER}/

.package:centos:
  extends: .package
  after_script:
    - mkdir -p ${CI_PROJECT_DIR}/data/el/${PLATFORM_VER}
    - mv -v ${CI_PROJECT_DIR}/data/*.{rpm,json} ${CI_PROJECT_DIR}/data/el/${PLATFORM_VER}/

.package:debian:
  extends: .package
  after_script:
    - mkdir -p ${CI_PROJECT_DIR}/data/debian/${PLATFORM_VER}
    - mv -v ${CI_PROJECT_DIR}/data/*.{deb,json} ${CI_PROJECT_DIR}/data/debian/${PLATFORM_VER}/

.package:macos:
  extends: .package
  before_script:
    - curl -fsSL https://omnitruck.cinc.sh/install.sh | sudo -E bash -s -- -c "stable" -P "cinc-foundation" -v "${CINC_FOUNDATION_VERSION}"
  script:
    - source /Users/omnibus/load-omnibus-toolchain.sh
    - bash caching.sh
    - cd chef/omnibus
    - bundle config set --local path ${CI_PROJECT_DIR}/bundle/vendor
    - bundle config set --local without 'development'
    - bundle install
    - sudo rm -rf /var/cache/omnibus/pkg/*
    - sudo -E bundle exec omnibus build cinc -l ${OMNIBUS_LOG_LEVEL} --override append_timestamp:false
    - mkdir -p ${CI_PROJECT_DIR}/data/mac_os_x/${PLATFORM_VER}
    - sudo chown -R omnibus:omnibus pkg
    - mv -v pkg/cinc*dmg* ${CI_PROJECT_DIR}/data/mac_os_x/${PLATFORM_VER}/
    - cp ../VERSION ${CI_PROJECT_DIR}/
  after_script:
    - sudo chown -R omnibus cache/ bundle/
    - sudo rm -rf /opt/cinc/ '/Applications/Cinc Foundation.app'
    - sudo pkgutil --forget com.cinc-project.pkg.cinc-foundation
  variables:
    OMNIBUS_FIPS_MODE: "false"

.package:opensuse:
  extends: .package
  after_script:
    - mkdir -p ${CI_PROJECT_DIR}/data/sles/${PLATFORM_VER}
    - mv -v ${CI_PROJECT_DIR}/data/*.{rpm,json} ${CI_PROJECT_DIR}/data/sles/${PLATFORM_VER}/

.package:windows:
  extends: .package
  before_script:
    - "[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12"
    - . { Invoke-WebRequest -useb https://omnitruck.cinc.sh/install.ps1 } | Invoke-Expression; install -channel "stable" -project "cinc-foundation" -version "${CINC_FOUNDATION_VERSION}"
  script:
    - $ErrorActionPreference = "Stop"
    - C:\omnibus\load-omnibus-toolchain.ps1
    - bash caching.sh
    - cd chef\omnibus
    - bundle config set --local path ${CI_PROJECT_DIR}/bundle/vendor
    - bundle config set --local without 'development'
    - bundle install
    - bundle exec omnibus build cinc -l ${OMNIBUS_LOG_LEVEL} --override append_timestamp:false
    - mkdir.exe -p ${CI_PROJECT_DIR}/data/windows/${PLATFORM_VER}
    - mv.exe -v pkg/cinc* ${CI_PROJECT_DIR}/data/windows/${PLATFORM_VER}
    - cp.exe ../VERSION ${CI_PROJECT_DIR}/
  after_script:
    - $ErrorActionPreference = "Stop"
    - $application = Get-WmiObject -Class Win32_Product -Filter "Name = 'Cinc Foundation v${CINC_FOUNDATION_VERSION}'"
    - $application.Uninstall()
    - Remove-Item -Recurse -Force C:\cinc-project

.package:ubuntu:
  extends: .package
  after_script:
    - mkdir -p ${CI_PROJECT_DIR}/data/ubuntu/${PLATFORM_VER}
    - mv -v ${CI_PROJECT_DIR}/data/*.{deb,json} ${CI_PROJECT_DIR}/data/ubuntu/${PLATFORM_VER}/
