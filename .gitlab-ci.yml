image: cincproject/omnibus-debian
stages:
 - patch
 - package
 - test
 - cleanup
 - deploy
 - publish

variables:
  ORIGIN: https://github.com/chef/chef.git
  REF: master
  CHANNEL: unstable
  CINC_PRODUCT: cinc
  OMNIBUS_FIPS_MODE: "true"

workflow:
  rules:
    # Run if we trigger a pipeline from the web
    - if: $CI_PIPELINE_SOURCE == "web"
    # Run if this is a merge request
    - if: $CI_MERGE_REQUEST_ID

patch:
  stage: patch
  tags:
    - osuosl
  script:
    - ./patch.sh
  artifacts:
    expire_in: 1d
    paths:
      - chef/
      - chef-zero/
      - inspec/
      - omnibus-software/

.package:
  stage: package
  tags:
    - osuosl
  dependencies:
    - patch
  script:
    - ./build.sh
    - cd chef/omnibus
    - mkdir ${CI_PROJECT_DIR}/data
    - mv -v pkg/cinc* ${CI_PROJECT_DIR}/data/
    - cp ../VERSION ${CI_PROJECT_DIR}/
  cache:
    paths:
      - cache/*
      - bundle/vendor/*
  artifacts:
    expire_in: 1mo
    paths:
      - data/*
      - VERSION

package:macos-10.14:
  extends: .package
  tags:
    - macos-10.14
  script:
    - source /Users/omnibus/load-omnibus-toolchain.sh
    - cd chef/omnibus
    - bundle install --without development --path ${CI_PROJECT_DIR}/bundle/vendor
    - sudo rm -rf /var/cache/omnibus/pkg/*
    - sudo -E bundle exec omnibus build cinc --override append_timestamp:false
    - mkdir -p ${CI_PROJECT_DIR}/data/mac_os_x/10.14
    - sudo chown -R omnibus:omnibus pkg
    - mv -v pkg/cinc*dmg* ${CI_PROJECT_DIR}/data/mac_os_x/10.14/
    - sudo bundle exec omnibus clean cinc
    - sudo rm -rf /opt/cinc/*
  cache:
    key: macos:10.14

package:macos-10.15:
  extends: .package
  tags:
    - macos-10.15
  script:
    - source /Users/omnibus/load-omnibus-toolchain.sh
    - cd chef/omnibus
    - bundle install --without development --path ${CI_PROJECT_DIR}/bundle/vendor
    - sudo rm -rf /var/cache/omnibus/pkg/*
    - sudo -E bundle exec omnibus build cinc --override append_timestamp:false
    - mkdir -p ${CI_PROJECT_DIR}/data/mac_os_x/10.15
    - sudo chown -R omnibus:omnibus pkg
    - mv -v pkg/cinc*dmg* ${CI_PROJECT_DIR}/data/mac_os_x/10.15/
    - sudo bundle exec omnibus clean cinc
    - sudo rm -rf /opt/cinc/*
  cache:
    key: macos:10.15

package:windows-2012r2:
  extends: .package
  tags:
    - windows-x64
  script:
    - $ErrorActionPreference = "Stop"
    - C:\omnibus\load-omnibus-toolchain.ps1
    - cd chef\omnibus
    - bundle install --without development --path ${CI_PROJECT_DIR}/bundle/vendor
    - bundle exec omnibus build cinc --override append_timestamp:false
    - mkdir.exe -p ${CI_PROJECT_DIR}/data/windows/2012r2
    - mv.exe -v pkg/cinc* ${CI_PROJECT_DIR}/data/windows/2012r2
    - bundle exec omnibus clean cinc
  cache:
    key: windows:2012r2

package:debian-8:
  extends: .package
  image: cincproject/omnibus-debian:8
  cache:
    key: debian:8
  after_script:
    - mkdir -p ${CI_PROJECT_DIR}/data/debian/8
    - mv -v ${CI_PROJECT_DIR}/data/*.{rpm,deb,json} ${CI_PROJECT_DIR}/data/debian/8/

package:debian-9:
  extends: .package
  image: cincproject/omnibus-debian:9
  cache:
    key: debian:9
  after_script:
    - mkdir -p ${CI_PROJECT_DIR}/data/debian/9
    - mv -v ${CI_PROJECT_DIR}/data/*.{rpm,deb,json} ${CI_PROJECT_DIR}/data/debian/9/

package:debian-10:
  extends: .package
  image: cincproject/omnibus-debian:10
  cache:
    key: debian:10
  after_script:
    - mkdir -p ${CI_PROJECT_DIR}/data/debian/10
    - mv -v ${CI_PROJECT_DIR}/data/*.{rpm,deb,json} ${CI_PROJECT_DIR}/data/debian/10/

package:ubuntu-16.04:
  extends: .package
  image: cincproject/omnibus-ubuntu:16.04
  cache:
    key: ubuntu:16.04
  after_script:
    - mkdir -p ${CI_PROJECT_DIR}/data/ubuntu/16.04
    - mv -v ${CI_PROJECT_DIR}/data/*.{rpm,deb,json} ${CI_PROJECT_DIR}/data/ubuntu/16.04/

package:ubuntu-18.04:
  extends: .package
  image: cincproject/omnibus-ubuntu:18.04
  cache:
    key: ubuntu:18.04
  after_script:
    - mkdir -p ${CI_PROJECT_DIR}/data/ubuntu/18.04
    - mv -v ${CI_PROJECT_DIR}/data/*.{rpm,deb,json} ${CI_PROJECT_DIR}/data/ubuntu/18.04/

package:ubuntu-20.04:
  extends: .package
  image: cincproject/omnibus-ubuntu:20.04
  cache:
    key: ubuntu:20.04
  after_script:
    - mkdir -p ${CI_PROJECT_DIR}/data/ubuntu/20.04
    - mv -v ${CI_PROJECT_DIR}/data/*.{rpm,deb,json} ${CI_PROJECT_DIR}/data/ubuntu/20.04/

package:centos-6:
  extends: .package
  image: cincproject/omnibus-centos:6
  cache:
    key: centos:6
  after_script:
    - mkdir -p ${CI_PROJECT_DIR}/data/el/6
    - mv -v ${CI_PROJECT_DIR}/data/*.{rpm,deb,json} ${CI_PROJECT_DIR}/data/el/6/

package:centos-7:
  extends: .package
  image: cincproject/omnibus-centos:7
  cache:
    key: centos:7
  after_script:
    - mkdir -p ${CI_PROJECT_DIR}/data/el/7
    - mv -v ${CI_PROJECT_DIR}/data/*.{rpm,deb,json} ${CI_PROJECT_DIR}/data/el/7/

package:centos-8:
  extends: .package
  image: cincproject/omnibus-centos:8
  cache:
    key: centos:8
  after_script:
    - mkdir -p ${CI_PROJECT_DIR}/data/el/8
    - mv -v ${CI_PROJECT_DIR}/data/*.{rpm,deb,json} ${CI_PROJECT_DIR}/data/el/8/

package:opensuse-15:
  extends: .package
  image: cincproject/omnibus-opensuse:15
  cache:
    key: opensuse:15
  after_script:
    - mkdir -p ${CI_PROJECT_DIR}/data/sles/15
    - mv -v ${CI_PROJECT_DIR}/data/*.{rpm,deb,json} ${CI_PROJECT_DIR}/data/sles/15/

.test:
  stage: test
  tags:
    - osuosl
  script:
    - /opt/cinc/bin/cinc-auditor exec test/integration

.test-windows:
  tags:
    - windows-x64
  before_script:
    - ./scripts/install-cinc.ps1
  script:
    - $ErrorActionPreference = "Stop"
    - $env:Path = [System.Environment]::GetEnvironmentVariable("Path","Machine") + ";" + [System.Environment]::GetEnvironmentVariable("Path","User")
    - echo $env:PATH
    - cinc-auditor.bat exec test\integration
  after_script:
    - ./scripts/uninstall-cinc.ps1

test:macos-10.14:
  extends: .test
  tags:
    - macos-10.14
  dependencies:
    - package:macos-10.14
  script:
    - sudo scripts/install-cinc-macos.sh
    - sudo /opt/cinc/bin/cinc-auditor exec test/integration
    - sudo scripts/uninstall-cinc-macos.sh

test:macos-10.15:
  extends: .test
  tags:
    - macos-10.15
  dependencies:
    - package:macos-10.15
  script:
    - sudo scripts/install-cinc-macos.sh
    - sudo /opt/cinc/bin/cinc-auditor exec test/integration
    - sudo scripts/uninstall-cinc-macos.sh

test:windows-2012r2:
  extends: .test-windows
  dependencies:
    - package:windows-2012r2

test:debian-8:
  extends: .test
  image: cincproject/omnibus-debian:8
  dependencies:
    - package:debian-8
  before_script:
    - dpkg -i data/debian/8/cinc*.deb
  after_script:
    - apt-get -y remove cinc

test:debian-9:
  extends: .test
  image: cincproject/omnibus-debian:9
  dependencies:
    - package:debian-9
  before_script:
    - dpkg -i data/debian/9/cinc*.deb
  after_script:
    - apt-get -y remove cinc

test:debian-10:
  extends: .test
  image: cincproject/omnibus-debian:10
  dependencies:
    - package:debian-10
  before_script:
    - dpkg -i data/debian/10/cinc*.deb
  after_script:
    - apt-get -y remove cinc

test:ubuntu-16.04:
  extends: .test
  image: cincproject/omnibus-ubuntu:16.04
  dependencies:
    - package:ubuntu-16.04
  before_script:
    - dpkg -i data/ubuntu/16.04/cinc*.deb
  after_script:
    - apt-get -y remove cinc

test:ubuntu-18.04:
  extends: .test
  image: cincproject/omnibus-ubuntu:18.04
  dependencies:
    - package:ubuntu-18.04
  before_script:
    - dpkg -i data/ubuntu/18.04/cinc*.deb
  after_script:
    - apt-get -y remove cinc

test:ubuntu-20.04:
  extends: .test
  image: cincproject/omnibus-ubuntu:20.04
  dependencies:
    - package:ubuntu-20.04
  before_script:
    - dpkg -i data/ubuntu/20.04/cinc*.deb
  after_script:
    - apt-get -y remove cinc

test:centos-6:
  extends: .test
  image: cincproject/omnibus-centos:6
  dependencies:
    - package:centos-6
  before_script:
    - yum -y install data/el/6/cinc*.rpm
  after_script:
    - yum -y remove cinc

test:centos-7:
  extends: .test
  image: cincproject/omnibus-centos:7
  dependencies:
    - package:centos-7
  before_script:
    - yum -y install data/el/7/cinc*.rpm
  after_script:
    - yum -y remove cinc

test:centos-8:
  extends: .test
  image: cincproject/omnibus-centos:8
  dependencies:
    - package:centos-8
  before_script:
    - yum -y install data/el/8/cinc*.rpm

test:opensuse-15:
  extends: .test
  image: cincproject/omnibus-opensuse:15
  dependencies:
    - package:opensuse-15
  before_script:
    - rpm -iU data/sles/15/cinc*.rpm

.ssh-setup:
  before_script:
    - eval $(ssh-agent -s)
    - echo "${SSH_PRIVATE_KEY}" | tr -d '\r' | ssh-add - > /dev/null
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "${SSH_KNOWN_HOSTS}" > ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts

deploy:
  allow_failure: false
  stage: deploy
  extends: .ssh-setup
  # Only run if this is triggered from the web
  rules:
    - if: $CI_PIPELINE_SOURCE == "web"
      when: manual
    - when: never
  tags:
    - osuosl
  dependencies:
    - package:debian-8
    - package:debian-9
    - package:debian-10
    - package:ubuntu-16.04
    - package:ubuntu-18.04
    - package:ubuntu-20.04
    - package:centos-6
    - package:centos-7
    - package:centos-8
    - package:opensuse-15
    - package:windows-2012r2
    - package:macos-10.14
    - package:macos-10.15
  script:
    - ssh cinc@${DOWNLOADS_HOST} "mkdir -p /data/incoming/files/${CHANNEL}/cinc/$(cat VERSION)"
    - rsync -avH --delete data/ cinc@${DOWNLOADS_HOST}:/data/incoming/files/${CHANNEL}/cinc/$(cat VERSION)/
    - ssh cinc@${DOWNLOADS_HOST} "chmod 755 /data/incoming/files/${CHANNEL}/cinc/$(cat VERSION)/"

publish:
  stage: publish
  extends: .ssh-setup
  dependencies: []
  # Only run if this is triggered from the web
  rules:
    - if: $CI_PIPELINE_SOURCE == "web"
      when: on_success
    - when: never
  tags:
    - downloads
  script:
    - sudo mkdir -p /data/mirror/files/${CHANNEL}/cinc
    - sudo /usr/bin/rsync -avH /data/incoming/files/${CHANNEL}/cinc/ /data/mirror/files/${CHANNEL}/cinc/
    - sudo -E -u cinc /usr/local/bin/update-cinc-api
    - ssh -q cinc@${MIRROR_HOST} "~/sync-from-master"

publish-gems:
  stage: publish
  # Only run if this is triggered from the web
  rules:
    - if: $CI_PIPELINE_SOURCE == "web"
      when: on_success
    - when: never
  tags:
    - osuosl
  dependencies:
    - patch
  script:
    - ./publish-gems.sh

publish-docker:
  image: docker:latest
  services:
  - docker:dind
  stage: publish
  # Only run if this is triggered from the web
  rules:
    - if: $CI_PIPELINE_SOURCE == "web"
      when: on_success
    - if: $CHANNEL == "unstable"
      when: never
    - when: never
  tags:
    - osuosl
  dependencies:
    - patch
  # binaries required for script
  before_script:
    - apk add curl bash
  script:
    - bash docker.sh
  variables:
    DOCKER_TLS_CERTDIR: "/certs"

.cleanup:
  stage: cleanup
  dependencies: []
  variables:
    GIT_CHECKOUT: "false"
  when: always
  script:
    - sudo rm -rf chef/

cleanup:macos-10.14:
  extends: .cleanup
  tags:
    - macos-10.14

cleanup:macos-10.15:
  extends: .cleanup
  tags:
    - macos-10.15
